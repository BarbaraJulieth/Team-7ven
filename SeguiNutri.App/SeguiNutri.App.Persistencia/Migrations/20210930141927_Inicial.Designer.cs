// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SeguiNutri.App.Persistencia;

namespace SeguiNutri.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20210930141927_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("SeguiNutri.App.Dominio.HistoricoBasico", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdPaciente")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HistoricoBasicos");
                });

            modelBuilder.Entity("SeguiNutri.App.Dominio.HistoricoDatos", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HistoricoBasicoPacienteId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdPaciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistroId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SeguimientoNutricionalPacienteId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("HistoricoBasicoPacienteId");

                    b.HasIndex("RegistroId");

                    b.HasIndex("SeguimientoNutricionalPacienteId");

                    b.ToTable("HistoricosDatos");
                });

            modelBuilder.Entity("SeguiNutri.App.Dominio.Persona", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaNacimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("SeguiNutri.App.Dominio.RegistroDatos", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("CaloriasConsumi")
                        .HasColumnType("float");

                    b.Property<double>("CarbohidratosConsumi")
                        .HasColumnType("float");

                    b.Property<string>("Fecha_Registro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GrasaConsumi")
                        .HasColumnType("float");

                    b.Property<string>("Id_Paciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MedidasAntropometricas")
                        .HasColumnType("float");

                    b.Property<double>("Peso")
                        .HasColumnType("float");

                    b.Property<double>("ProteinaConsumi")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("RegistrosDatos");
                });

            modelBuilder.Entity("SeguiNutri.App.Dominio.SeguimientoNutris", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HistoricoBasicoPacienteId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdCoach")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNutricionista")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdPaciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SugerenciasCuid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HistoricoBasicoPacienteId");

                    b.ToTable("SeguimientosNutri");
                });

            modelBuilder.Entity("SeguiNutri.App.Dominio.Coach", b =>
                {
                    b.HasBaseType("SeguiNutri.App.Dominio.Persona");

                    b.Property<string>("IdCoach")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Coach");
                });

            modelBuilder.Entity("SeguiNutri.App.Dominio.Nutricionista", b =>
                {
                    b.HasBaseType("SeguiNutri.App.Dominio.Persona");

                    b.Property<string>("IdNutricionista")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Nutricionista");
                });

            modelBuilder.Entity("SeguiNutri.App.Dominio.Paciente", b =>
                {
                    b.HasBaseType("SeguiNutri.App.Dominio.Persona");

                    b.Property<string>("CoachAsignadoPacienteId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdPaciente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NutricionistaAsignadoPacienteId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RegistroDatosPacienteId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("CoachAsignadoPacienteId");

                    b.HasIndex("NutricionistaAsignadoPacienteId");

                    b.HasIndex("RegistroDatosPacienteId");

                    b.HasDiscriminator().HasValue("Paciente");
                });

            modelBuilder.Entity("SeguiNutri.App.Dominio.HistoricoDatos", b =>
                {
                    b.HasOne("SeguiNutri.App.Dominio.HistoricoBasico", "HistoricoBasicoPaciente")
                        .WithMany()
                        .HasForeignKey("HistoricoBasicoPacienteId");

                    b.HasOne("SeguiNutri.App.Dominio.RegistroDatos", "Registro")
                        .WithMany()
                        .HasForeignKey("RegistroId");

                    b.HasOne("SeguiNutri.App.Dominio.SeguimientoNutris", "SeguimientoNutricionalPaciente")
                        .WithMany()
                        .HasForeignKey("SeguimientoNutricionalPacienteId");

                    b.Navigation("HistoricoBasicoPaciente");

                    b.Navigation("Registro");

                    b.Navigation("SeguimientoNutricionalPaciente");
                });

            modelBuilder.Entity("SeguiNutri.App.Dominio.SeguimientoNutris", b =>
                {
                    b.HasOne("SeguiNutri.App.Dominio.HistoricoBasico", "HistoricoBasicoPaciente")
                        .WithMany()
                        .HasForeignKey("HistoricoBasicoPacienteId");

                    b.Navigation("HistoricoBasicoPaciente");
                });

            modelBuilder.Entity("SeguiNutri.App.Dominio.Paciente", b =>
                {
                    b.HasOne("SeguiNutri.App.Dominio.Coach", "CoachAsignadoPaciente")
                        .WithMany()
                        .HasForeignKey("CoachAsignadoPacienteId");

                    b.HasOne("SeguiNutri.App.Dominio.Nutricionista", "NutricionistaAsignadoPaciente")
                        .WithMany()
                        .HasForeignKey("NutricionistaAsignadoPacienteId");

                    b.HasOne("SeguiNutri.App.Dominio.RegistroDatos", "RegistroDatosPaciente")
                        .WithMany()
                        .HasForeignKey("RegistroDatosPacienteId");

                    b.Navigation("CoachAsignadoPaciente");

                    b.Navigation("NutricionistaAsignadoPaciente");

                    b.Navigation("RegistroDatosPaciente");
                });
#pragma warning restore 612, 618
        }
    }
}
